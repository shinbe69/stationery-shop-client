[{"/home/shinbe69/Desktop/React/stationery-shop/src/index.js":"1","/home/shinbe69/Desktop/React/stationery-shop/src/router/router.js":"2","/home/shinbe69/Desktop/React/stationery-shop/src/components/footer/footer.js":"3","/home/shinbe69/Desktop/React/stationery-shop/src/components/header/header.js":"4","/home/shinbe69/Desktop/React/stationery-shop/src/App.js":"5","/home/shinbe69/Desktop/React/stationery-shop/src/components/homepage/homepage.js":"6","/home/shinbe69/Desktop/React/stationery-shop/src/components/productSection/productSection.js":"7","/home/shinbe69/Desktop/React/stationery-shop/src/components/about/about.js":"8","/home/shinbe69/Desktop/React/stationery-shop/src/components/productPage/productpage.js":"9","/home/shinbe69/Desktop/React/stationery-shop/src/components/login/login.js":"10","/home/shinbe69/Desktop/React/stationery-shop/src/components/loginForm/loginForm.js":"11","/home/shinbe69/Desktop/React/stationery-shop/src/components/product/product.js":"12","/home/shinbe69/Desktop/React/stationery-shop/src/components/popup/popup.js":"13","/home/shinbe69/Desktop/React/stationery-shop/src/AppContainer.js":"14","/home/shinbe69/Desktop/React/stationery-shop/src/components/cartManage/cartManage.js":"15","/home/shinbe69/Desktop/React/stationery-shop/src/components/cartManage/item.js":"16","/home/shinbe69/Desktop/React/stationery-shop/src/components/blog/blog.js":"17","/home/shinbe69/Desktop/React/stationery-shop/src/components/protected/protected.js":"18","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/dashboard.js":"19","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/addNewProduct/addNewProduct.js":"20","/home/shinbe69/Desktop/React/stationery-shop/src/components/login/signupForm/signupForm.js":"21","/home/shinbe69/Desktop/React/stationery-shop/src/components/updateUserInfo/updateUserInfo.js":"22","/home/shinbe69/Desktop/React/stationery-shop/src/components/checkoutPage/checkoutPage.js":"23","/home/shinbe69/Desktop/React/stationery-shop/src/components/onlyForwarded/onlyForwarded.js":"24","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/orderManage/orderManage.js":"25","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/orderManage/order/order.js":"26","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/addNewCategory/addNewCategory.js":"27"},{"size":304,"mtime":1697936336346,"results":"28","hashOfConfig":"29"},{"size":4721,"mtime":1697880887456,"results":"30","hashOfConfig":"29"},{"size":124,"mtime":1691421940543,"results":"31","hashOfConfig":"29"},{"size":7366,"mtime":1697802055620,"results":"32","hashOfConfig":"29"},{"size":3889,"mtime":1697803830979,"results":"33","hashOfConfig":"29"},{"size":567,"mtime":1694230887444,"results":"34","hashOfConfig":"29"},{"size":763,"mtime":1697600171412,"results":"35","hashOfConfig":"29"},{"size":132,"mtime":1691483756997,"results":"36","hashOfConfig":"29"},{"size":4428,"mtime":1697792870302,"results":"37","hashOfConfig":"29"},{"size":182,"mtime":1697205748200,"results":"38","hashOfConfig":"29"},{"size":2872,"mtime":1697552366707,"results":"39","hashOfConfig":"29"},{"size":754,"mtime":1697633244296,"results":"40","hashOfConfig":"29"},{"size":780,"mtime":1697792786924,"results":"41","hashOfConfig":"29"},{"size":1110,"mtime":1697366458096,"results":"42","hashOfConfig":"29"},{"size":7281,"mtime":1697876607277,"results":"43","hashOfConfig":"29"},{"size":4602,"mtime":1697782369577,"results":"44","hashOfConfig":"29"},{"size":224,"mtime":1697354035835,"results":"45","hashOfConfig":"29"},{"size":259,"mtime":1697725795051,"results":"46","hashOfConfig":"29"},{"size":1732,"mtime":1697881114660,"results":"47","hashOfConfig":"29"},{"size":6201,"mtime":1697880987603,"results":"48","hashOfConfig":"29"},{"size":5259,"mtime":1697883737803,"results":"49","hashOfConfig":"29"},{"size":9053,"mtime":1697876607273,"results":"50","hashOfConfig":"29"},{"size":481,"mtime":1697727625846,"results":"51","hashOfConfig":"29"},{"size":429,"mtime":1697799484459,"results":"52","hashOfConfig":"29"},{"size":627,"mtime":1697813773046,"results":"53","hashOfConfig":"29"},{"size":3390,"mtime":1697861104546,"results":"54","hashOfConfig":"29"},{"size":3161,"mtime":1697881425346,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16wopdz",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"62"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"62"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"62"},"/home/shinbe69/Desktop/React/stationery-shop/src/index.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/router/router.js",[],[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/footer/footer.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/header/header.js",["151","152","153","154","155","156"],[],"import { useCookies } from 'react-cookie'\nimport { useContext, useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { CartQuantityContext, CartContext, MessageContext } from '../../AppContainer'\nimport './header.css'\nimport { selectTypeOfPopup, showPopup } from '../popup/popup'\nimport Protected from '../protected/protected'\n\n\nexport default function Header() {\n    const [cookie, setCookie, removeCookie] = useCookies()\n    const [user, setUser] = useState('Đăng nhập')\n    const [searchResults, setSearchResults] = useState([])\n    const [cartQuantity, setCartQuantity] = useContext(CartQuantityContext)\n    const [cart, setCart] = useContext(CartContext)\n    const [message, setMessage] = useContext(MessageContext)\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    useEffect(() => {\n        if ((typeof cookie.user) !== 'undefined') {\n            fetch('/api/users/addToCart', {\n                method: 'PATCH',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username: cookie.user, cart: []})\n            })\n            .then(res => res.json())\n            .then((cart) => {\n                setCart(cart)\n            })\n            .catch(error => console.log(error))\n            setUser((cookie.user).substring(0, 7) + '...')\n            document.getElementById('logout').style.display = 'block'\n        }\n        else {\n            document.getElementById('logout').style.display = 'none'\n            setUser('Đăng nhập')\n            setCart([])\n        }\n    }, [cookie.user])\n\n    useEffect(() => {\n        setCartQuantity(cart.totalQuantity || 0)\n    }, [cart])\n\n    useEffect(() => {\n        document.getElementById('searchResultsDisplay').style.display = 'block'\n    }, [searchResults])\n\n    function handleLogout() {\n        fetch('/api/auth/logout', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                removeCookie('user')\n                removeCookie('isAdmin')\n                document.body.style.animationName = 'fadeIn'\n                navigate('/../')\n            }\n            else {\n                console.log('Logout failed!!')\n            }\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    function handleSearch(event) {\n        if (event.target.value !== '') {\n            fetch('/api/search', {\n                method: 'POST',\n                headers: {\n                    \"Accept\": 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ searchInput: event.target.value })\n            })\n            .then(results => results.json())\n            .then(searchResults => setSearchResults(searchResults))\n            .catch(err => console.log(err))\n        }\n        else setSearchResults([])\n    }\n\n    function handleSearchResultClick(result) {\n        // navigate('/product', { state: result })\n        fetch('/api/products/getProductsById', {\n            method: 'POST',\n            headers: {\n                \"Accept\": 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ productID: [result.id] })\n        })\n        .then(product => product.json())\n        .then(product => {\n            document.getElementById('searchResultsDisplay').style.display = 'none'\n            navigate('/../product', { state: product[0]})\n        })\n        .catch(err => console.log(err))\n    }\n\n    function handleKeyDown(event) {\n        if (event.key === 'Escape')\n            document.getElementById('searchResultsDisplay').style.display = 'none'\n        else if (event.key === 'Enter') {\n            let idArr = []\n            searchResults.forEach(result => {\n                idArr.push(result.id)\n            })\n            document.getElementById('searchResultsDisplay').style.display = 'none'\n            fetch('/api/products/getProductsById', {\n                method: 'POST',\n                headers: {\n                    \"Accept\": 'application/json',\n                    'Content-Type': 'application/json'   \n                },\n                body: JSON.stringify({ productID: idArr})\n            }).then(products => products.json())\n            .then(products => {\n                navigate('/product-filter', { state: products, replace: true })\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    function handleCartClick() {\n        if (typeof cookie.user !== 'undefined') {\n            let idArr = []\n            cart.cartItems.forEach(item => {\n                idArr.push(item.id)\n            })\n\n            fetch('/api/products/getProductsById', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ productID: idArr })\n            }).then(res => res.json())\n            .then(products => {\n                products.forEach((product) => {\n                    cart.cartItems.forEach(item => {\n                        if (item.id === product._id)\n                            product.cartQuantity = item.quantity\n                    })\n                })\n                navigate('/cart-manage', {\n                    state: products\n                })\n            })\n            .catch(error => console.log(error))\n        }\n        else {\n            navigate('/login')\n            selectTypeOfPopup('WARNING')\n            setMessage('Bạn vui lòng đăng nhập để xem giỏ hàng')\n            showPopup()\n        }\n    }\n\n    return (\n        <div id=\"header\">\n            <div id='logo'>\n                <a href='/'><img src='logo.jpg' alt='logo' /></a>\n            </div>\n            <div id='search'>\n                <input type=\"text\" onChange={ handleSearch } onClick={ handleSearch } onKeyDown={ handleKeyDown } placeholder=\"Nhập từ khóa để tìm sản phẩm\">\n                </input>\n                <div id='searchResultsDisplay'>\n                    {searchResults.map(result => (\n                        <div onClick={() => handleSearchResultClick(result) } key={result.id}>\n                            <img src='search.png' alt='searchIcon'/>\n                            <p><i>{result.name}</i></p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div id='userInfo'>\n                <div id='cart' onClick={ handleCartClick }>\n                    <p id='productQuantityInCart'>{ cartQuantity }</p>\n                    <img src='cart.png' alt='cart' />\n                </div>\n                <div id='user'>\n                    <a href='/login' style={{textDecoration: 'underline', color: '#0474e4', margin: 'auto', whiteSpace: 'nowrap', overflow: 'hidden'}}>{ user }</a>\n                    <img id='logout' onClick={ handleLogout } src='logout.png' alt='logout' />\n                </div>\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/App.js",["157","158","159"],[],"import { Outlet, useNavigate } from 'react-router-dom'\nimport { useState, useEffect, createContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport './App.css';\n\nexport const ProductSectionContext = createContext()\n\nexport default function App() {\n  const [cookie, setCookie, removeCookie] = useCookies()\n  const [categories, setCategories] = useState([])\n  const [selection, setSelection] = useState('')\n  const [products, setProducts] = useState([])\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    document.body.scrollTop = 0\n    document.documentElement.scrollTop = 0\n  })\n\n  useEffect(() => {\n    fetch('/api/getCategories')\n    .then(res => res.json())\n    .then(categories => setCategories(categories))\n  }, [])\n\n  useEffect(() => {\n    if (selection !== '') {\n      fetch('/api/products/getProductsByCategory', {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ categoryId: selection })\n      })\n      .then(res => res.json())\n      .then(products => setProducts(products))\n      .catch((error) => console.log(error))\n      // Show clear category button\n      document.getElementById('clearCategoryFilter').style.display = 'block'\n      navigate('/product-filter')\n    }\n    else {\n      fetch('/api/products/getProducts')\n      .then(res => res.json())\n      .then(products => setProducts(products))\n      .catch((error) => console.log(error))\n      // Hide the clear category button\n      document.getElementById('clearCategoryFilter').style.display = 'none'\n    }\n  }, [selection])\n\n  function handleSideMenuSwitch() {\n    document.getElementById('sideMenuSwitch').style.display = 'none'\n    document.getElementById('sideMenu').style.transform = 'translateX(0vw)'\n  }\n\n  function handleShowDashboard() {\n    navigate('/order-manage', {\n      state: cookie.isAdmin\n    })\n  }\n\n  return (\n    <div id='app'>\n      <div className=\"sideMenu\">\n        <div id='categoryContainer'>\n          <h4 style={{ textDecoration: 'underline' }}>Danh mục sản phẩm</h4>\n          {categories.map(category => (\n            <div className=\"categoryItem\" key={ category._id } onClick={ () => setSelection(category._id) } style={ category._id === selection ? { backgroundColor: '#dedcdc' } : {}} >\n              <img src={ category.thumnail } alt=\"category item\" />\n              <hr style={{ margin: '0 1rem' }} />\n              <p>{ category.name }</p>\n            </div>\n          ))}\n          <div className='categoryItem' id='clearCategoryFilter' onClick={() => setSelection('') }>\n            <img src='./close.png' alt='clear selection'/>\n          </div>\n        </div>\n        {/* <div id='recentBlogs'>\n          <h4 style={{ textDecoration: 'underline' }}>Bài viết gần đây</h4>\n          {categories.map(category => (\n            <div className=\"categoryItem\" key={ category._id } onClick={ () => setSelection(category._id) } style={ category._id === selection ? { backgroundColor: '#dedcdc' } : {}} >\n              <p>{ category.name }</p>\n            </div>\n          ))}\n        </div> */}\n        { typeof cookie.user !== 'undefined' && cookie.isAdmin ? \n          <div id='showDashboard'>\n            <div className='categoryItem' onClick={ handleShowDashboard }>\n              <img src='./settings.png' alt=\"category item\" />\n              <hr style={{ margin: '0 1rem' }} />\n              <p>Trang quản lý</p>\n            </div>\n          </div>\n          : <></>\n        }\n      </div>\n\n      <div id='sideMenuSwitch' onClick={ handleSideMenuSwitch }>\n        <img src='dropMenu.png' alt='side menu switch'/>\n      </div>\n      <div id='content' >\n        <ProductSectionContext.Provider value={products} >\n          <Outlet />\n        </ProductSectionContext.Provider>\n      </div>\n    </div>\n  );\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/homepage/homepage.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/productSection/productSection.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/about/about.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/productPage/productpage.js",["160","161","162","163","164"],[],"import { useLocation, useNavigate } from 'react-router-dom'\nimport { useContext, useState } from 'react'\nimport { useCookies } from 'react-cookie'\nimport { CartQuantityContext, CartContext, MessageContext } from '../../AppContainer'\nimport { showPopup, selectTypeOfPopup } from '../popup/popup'\nimport './productPage.css'\n\nexport default function ProductPage() {\n    const navigate = useNavigate()\n    const product = useLocation()\n    const [cookie, setCookie, removeCookie] = useCookies()\n    const [quantity, selectQuantity] = useState(1)\n    const [cartQuantity, setCartQuantity] = useContext(CartQuantityContext)\n    const [cart, setCart] = useContext(CartContext)\n    const [message, setMessage] = useContext(MessageContext)\n\n    function handleAddToCart() {\n        if (typeof cookie.user !== 'undefined') {\n            fetch('/api/users/addToCart', {\n                method: 'PATCH',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username: cookie.user, cart: [{id: product.state.id, quantity}]})\n            }).then(result => result.json())\n            .then(cart => {\n                setCartQuantity(cart.totalQuantity)\n                setCart(cart)\n                selectTypeOfPopup('SUCCESS')\n                setMessage('Thêm vào giỏ thành công')\n                showPopup()\n            })\n            .catch(error => console.log(error))\n        }\n        else {\n            navigate('/login')\n            selectTypeOfPopup('WARNING')\n            setMessage('Bạn vui lòng đăng nhập để thêm vào giỏ hàng')\n            showPopup()\n        }\n    }\n\n    return (\n        <div id=\"productPage\" >\n            <div id='productThumnail' >\n                <img src={ product.state.thumnail } alt='product thumnail' />\n            </div>\n            <div id='productInfo'>\n                <div id='addToCartSection'>\n                    <p style={{ whiteSpace: 'nowrap', color: '#999' }}>Số lượng</p>\n                    <div id='selectQuantity'>\n                        <div style={{ fontWeight: 'bold', width: '25%', display: 'flex' }} onClick={() => quantity === 1 ? {} : selectQuantity(quantity - 1) }>\n                            <p>-</p>\n                        </div>\n                        <hr style={{ margin: '0.4em 0' }} />\n                        <p id='quantity' style={{ fontWeight: 'bold', width: '50%', textAlign: 'center' }}>{quantity}</p>\n                        <hr style={{ margin: '0.4em 0' }} />\n                        <div style={{ fontWeight: 'bold', width: '25%', display: 'flex' }} onClick={() => selectQuantity(quantity + 1) }>\n                            <p >+</p>\n                        </div>\n                    </div>\n                    <div id='addToCartButton' onClick={ handleAddToCart }>\n                        <img src=\"add-to-cart.png\" alt=\"add-to-cart\" style={{ margin: 'auto' }} />\n                        <p style={{ whiteSpace: 'nowrap', margin: 'auto' }} ><b>Thêm vào giỏ hàng</b></p>\n                    </div>\n                </div>\n                <div id='specificInfo'>\n                    <h3>Thông tin sản phẩm</h3>\n                    <p><label style={{ color: '#999' }} >Tên:</label> &ensp;{ product.state.name }</p>\n                    <p><label style={{ color: '#999' }}>Mô tả:</label> &ensp;{ product.state.description }</p>\n                    <p style={{ color: '#FF9B9B' }}><label style={{ color: '#999' }}>Giá:</label> &ensp;\n                        <b>{new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.state.price) }</b>\n                    </p>\n                    <h4 style={{ border: '1px solid #D8D9DA', borderRadius: '0.3em', width: 'fit-content', height: 'fit-content', padding: '0.5em', color: '#FFFFFF', backgroundColor:  product.state.quantity > 0 ? '#00C851' : '#F05E16' }}>{ product.state.quantity > 0 ? 'Còn hàng' : 'Tạm hết hàng'}</h4>\n                </div>\n            </div>\n            <div className='seperator'>\n                &#9671;<hr style={{ width: '60%', margin: 'auto' }} />&#9671;\n            </div>\n            <div id='additionalInfo'>\n                <h3>Thông tin chi tiết</h3>\n                <p>{ product.state.additionalInfo || 'Đang cập nhật'}</p>\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/login/login.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/loginForm/loginForm.js",["165","166","167","168","169"],[],"import { useContext, useState} from 'react'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\nimport { MessageContext } from '../../AppContainer'\nimport { showPopup } from '../popup/popup'\n\nexport default function LoginForm() {\n    const location = useLocation()\n    const navigate = useNavigate()\n    const [cookie, setCookie, removeCookie] = useCookies()\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [message, setMessage] = useContext(MessageContext)\n\n    //handle submit button\n    function handleLogin(event) {\n        event.preventDefault()\n        if (!username.includes('@') && !username.includes('0')) {\n            setMessage('Vui lòng nhập email hoặc số điện thoại hợp lệ!')\n            showPopup()\n        }\n        else if (password.length < 6) {\n            setMessage('Mật khẩu phải có ít nhất 6 ký tự!')\n            showPopup()\n        }\n        else {\n            //lOGIN\n            fetch('/api/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({username: username, password: password})\n            })\n            .then((response) => {\n                if (response.status === 200) {\n                    navigate('/')\n                }\n                else {\n                    setMessage('Tên đăng nhập hoặc mật khẩu không đúng!')\n                    showPopup()\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n        }\n    }\n    //handle change event of a username and password\n    function handleChange(event) {\n        let tartget = event.target.name\n        if(tartget === \"username\") {\n            setUsername(event.target.value)\n        }\n        else if(tartget === 'password'){    \n            setPassword(event.target.value)\n        }\n    }\n\n    function handleOnKeyDown(event) {\n        if (event.key === 'Enter')\n            handleLogin(event)\n    }\n\n    return (\n        <form id='loginForm' className='form'>\n            <input type='text' name='username' onChange={handleChange} placeholder='Email hoặc số điện thoại' value={ username } onKeyDown={ handleOnKeyDown } />\n            <input type='password' name='password' onChange={handleChange} placeholder='Mật khẩu' value={ password } onKeyDown={ handleOnKeyDown }/>\n            <p id='submitLogin' disabled={ !(username !== \"\" && password !== \"\") } onClick={ handleLogin }>Đăng nhập</p>\n            <p id='register' onClick={() => navigate('/signup') } >Tạo tài khoản mới</p>\n            <p id='forgotPassword'>Quên mật khẩu?</p>\n        </form>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/product/product.js",["170"],[],"import { useNavigate } from \"react-router-dom\"\n\nexport default function Product(props) {\n    const navigate = useNavigate()\n\n    function forwardToProduct() {\n        navigate('/product', {\n            state: props\n        })\n    }\n\n    function addToCart() {\n        \n    }\n\n    return(\n        <div className=\"product\" onClick={ forwardToProduct }>\n            <div className=\"productThumnail\">\n                <img src={ props.thumnail } alt=\"thumnail\" />\n            </div>\n            <div className=\"productInfo\">\n                <p>{ props.name }</p>\n                <p style={{ color: '#FF9B9B' }} ><b>{ new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(props.price) }</b></p>\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/popup/popup.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/AppContainer.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/cartManage/cartManage.js",["171","172","173","174"],[],"import { useLocation, useNavigate } from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\nimport { useEffect, useState, useRef, useContext} from 'react'\nimport { showPopup, selectTypeOfPopup } from '../popup/popup'\nimport { MessageContext, CartContext } from '../../AppContainer'\nimport './cartManage.css'\nimport Item from './item'\n\nexport default function CartManage () {\n    const [cart, setCart] = useContext(CartContext)\n    const [message, setMessage] = useContext(MessageContext)\n    const [cookie, setCookie, removeCookie] = useCookies()\n    const navigate = useNavigate()\n    const products = useLocation().state\n    const [address, setAddress] = useState('')\n    const [buttonContent, setButtonContent] = useState('Đặt hàng')\n    const intervalID = useRef()\n    const timer = useRef(5)\n\n    let totalPrice = 0\n    products.forEach(item => {\n        totalPrice += item.price * item.cartQuantity\n    })\n\n    useEffect(() => {\n        fetch('/api/users/getUser', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username: cookie.user })\n        }).then(result => result.json())\n        .then(user => setAddress(user.address))\n        .catch(error => console.log(error))\n    }, [])\n\n\n    function handlePurchase() {\n        if (address === '') {\n            selectTypeOfPopup('WARNING')\n            setMessage('Bạn chưa có thông tin địa chỉ trong hệ thống. Vui lòng bổ sung thêm')\n            showPopup()\n        }\n        else {\n            if (timer.current !== 5) {\n                let prepareItems = []\n                products.forEach(product => {\n                    prepareItems.push({ id: product._id, quantity: product.cartQuantity })\n                })\n                fetch('/api/orders/createOrder', {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ items: prepareItems, address, username: cookie.user, value: totalPrice })\n                }).then(res => res.json())\n                .then(orderID => {\n                    fetch('/api/users/removeFromCart', {\n                        method: 'PATCH',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({ username: cookie.user, cart: cart.cartItems})\n                    }).then(result => result.json())\n                    .then(cart => {\n                        setCart({ cartItems: [], totalQuantity: 0 })\n                        selectTypeOfPopup('SUCCESS')\n                        setMessage('Đơn hàng được tạo thành công, vui lòng chờ xác nhận từ nhân viên')\n                        showPopup()\n                        setTimeout(() => {\n                            navigate('/')\n                        }, 700)\n                    })\n                    .catch(error => console.log(error))\n                })\n                .catch(error => {\n                    console.log(error)\n                    selectTypeOfPopup('WARNING')\n                    setMessage('Có lỗi xảy ra, bạn vui lòng thử lại')\n                    showPopup()\n                })\n            }\n            else {\n                selectTypeOfPopup('WARNING')\n                setMessage('Vui lòng kiểm tra lại thông tin một lần nữa')\n                showPopup()\n                document.getElementById('purchase').style.cursor = 'not-allowed'\n                document.getElementById('purchase').setAttribute('disabled', 'true')\n                setButtonContent('( ' + timer.current + 's ) Xác nhận')\n                intervalID.current = setInterval(() => {\n                    timer.current -= 1\n                    setButtonContent('( ' + timer.current + 's ) Xác nhận')\n                }, 1000)\n                setTimeout(() => {\n                    clearInterval(intervalID.current)\n                    document.getElementById('purchase').style.cursor = 'pointer'\n                    document.getElementById('purchase').removeAttribute('disabled')\n                    setButtonContent('Xác nhận')\n                }, 5000)\n            }\n        }\n    }\n\n    function handleShowOrders() {\n        navigate('/')\n    }\n    \n    return (\n        <div id=\"cartManage\">\n            <button id='showOrders' onClick={ handleShowOrders }>Xem đơn hàng</button>\n            <h2>Các sản phẩm đang chờ trong giỏ hàng</h2>\n            <div id='cartItemsContainer'>\n                <div id='cartListHeader' >\n                    <h3 style={{ width: '50%', textDecoration: 'underline' }}>Sản phẩm</h3>\n                    <hr />\n                    <h3 style={{ width: '25%', textDecoration: 'underline' }}>Đơn giá</h3>\n                    <hr />\n                    <h3 style={{ width: '25%', textDecoration: 'underline' }}>Số lượng</h3>\n                </div>\n                {products.map(product => (\n                    <Item key={ product._id } product={ product } />\n                ))}\n            </div>\n            <div style={{ position: 'sticky', bottom: '0px', zIndex: '3', WebkitBackdropFilter: 'blur(5px)', backdropFilter: 'blur(5px)', padding: '1em 0'}}>\n            { products.length === 0 ? <h3>Giỏ hàng của bạn đang trống</h3> : <>\n            <div className='seperateLine'></div>\n                <div id='paymentInfo' >\n                    \n                    <div id='addressConfirm'>\n                        <h3 style={{ textDecoration: 'underline' }}>Địa chỉ giao hàng:</h3>\n                        <p>{ !address ? 'Bạn chưa có thông tin địa chỉ' : address}</p>\n                        <p id='changeAddress' onClick={ () => navigate('/update-user-info', {\n                            state: cookie.user\n                        })}>{!address ? 'Bổ sung' : 'Thay đổi địa chỉ'}</p>\n                    </div>\n                    <div id='paymentMethod'>\n                        <h3 style={{ textDecoration: 'underline', marginBottom: '1em' }}>Phương thức thanh toán:</h3>\n                        <select style={{ width: '100%', height: '3em', padding: '0.2em', fontSize: '1em' }}>\n                            <option>Thanh toán khi nhận hàng (COD)</option>\n                            <option disabled>Thanh toán qua thẻ ATM nội địa (đang phát triển)</option>\n                        </select>\n                    </div>\n                    <div id='purchaseContainer'>\n                        <h3 style={{ textDecoration: 'underline', marginBottom: '1em' }}>Thành tiền: {new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(totalPrice) }</h3>\n                        <button id='purchase' onClick={ handlePurchase } >{ buttonContent }</button>\n                    </div>\n                </div>\n                <div className='seperateLine'></div>\n            </> }\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/cartManage/item.js",["175","176","177","178","179","180"],[],"import { useContext, useEffect, useState } from 'react'\nimport { useCookies } from 'react-cookie'\nimport { useNavigate } from 'react-router-dom'\nimport { CartQuantityContext, CartContext, MessageContext } from '../../AppContainer'\nimport { showPopup, selectTypeOfPopup } from '../popup/popup'\n\n\nexport default function Item({ product }) {\n    const navigate = useNavigate()\n    const [cookie, setCookie] = useCookies()\n    const [cart, setCart] = useContext(CartContext)\n    const [message, setMessage] = useContext(MessageContext)\n    const [cartQuantity, setCartQuantity] = useContext(CartQuantityContext)\n    const [quantity, selectQuantity] = useState(product.cartQuantity)\n\n    function handleChangeItemQuantity(event) {\n        let action = ''\n        switch (event.target.className) {\n            case 'removeCartItem':\n                action = 'removeFromCart'\n                setMessage('Xóa sản phẩm thành công')\n                break\n            case 'subtract':\n                action = 'removeFromCart'\n                setMessage('Giảm số lượng thành công')\n                break\n            case 'plus':\n                action = 'addToCart'\n                setMessage('Tăng số lượng thành công')\n                break\n        }\n\n        fetch('/api/users/'.concat(action), {\n            method: 'PATCH',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username: cookie.user, cart: [{id: product._id, quantity: event.target.className === 'removeCartItem' ? quantity : 1}]})\n        }).then(result => result.json())\n        .then(cart => {\n            setCartQuantity(cart.totalQuantity)\n            setCart(cart)\n            selectTypeOfPopup('SUCCESS')\n            showPopup()\n            updateCartManagePage(cart)\n        })\n        .catch(error => console.log(error))\n    }\n\n    function updateCartManagePage(inputCart) {\n        let idArr = []\n            inputCart.cartItems.forEach(item => {\n                idArr.push(item.id)\n            })\n            fetch('/api/products/getProductsById', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ productID: idArr })\n            }).then(res => res.json())\n            .then(products => {\n                products.forEach((product) => {\n                    inputCart.cartItems.forEach(item => {\n                        if (item.id === product._id)\n                            product.cartQuantity = item.quantity\n                    })\n                })\n                navigate(typeof cookie.user !== 'undefined' ? '/cart-manage' : '/login', {\n                    state: products\n                })\n            })\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <div id=\"cartItem\">\n            <div id=\"itemThumnail\">\n                <img src={ product.thumnail } alt='thumnail'/>\n            </div>\n            <p style={{ width: '35%'}}>{ product.name }</p>\n            <h4 id=\"unitPrice\" >{new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price) }</h4>\n            <div id=\"itemQuantity\" style={{ height: '100%', display: 'flex'}}>\n                <div id='selectQuantity' style={{ width: '40%', height: '40%', margin: 'auto' }}>\n                    <div className='subtract' style={{ fontWeight: 'bold', width: '25%', display: 'flex' }} onClick={(event) => {\n                        if (quantity > 1) selectQuantity(quantity - 1)\n                        handleChangeItemQuantity(event)\n                        }}>\n                        <p className='subtract'>-</p>\n                    </div>\n                    <hr style={{ margin: '0.4em 0' }} />\n                    <p id='quantity' style={{ fontWeight: 'bold', width: '50%', textAlign: 'center' }}>{quantity}</p>\n                    <hr style={{ margin: '0.4em 0' }} />\n                    <div className='plus' style={{ fontWeight: 'bold', width: '25%', display: 'flex' }} onClick={(event) => {\n                        selectQuantity(quantity + 1) \n                        handleChangeItemQuantity(event)\n                        }}>\n                        <p className='plus'>+</p>\n                    </div>\n                </div>\n                <p id='removeCartItem' className='removeCartItem' onClick={ handleChangeItemQuantity } >Xóa</p>\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/blog/blog.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/protected/protected.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/dashboard.js",["181","182","183"],[],"import { useEffect } from 'react'\nimport { Outlet, useNavigate } from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\nimport './dashboard.css'\n\nexport default function Dashboard() {\n    const [cookie, setCookie, removeCookie] = useCookies()\n    const navigate = useNavigate()\n    \n    return (\n        <div id=\"dashboard\">\n            <div className='sideMenu' style={{ backgroundColor: '#f5f5f0' }} >\n                <h4 style={{ textDecoration: 'underline' }}>Thao tác</h4>\n                <div className='categoryItem' onClick={() => navigate('/add-new-product', {\n                    state: cookie.isAdmin\n                })}>\n                    <img src='./add-product.png' alt=\"category item\" />\n                    <hr style={{ margin: '0 1rem' }} />\n                    <p>Thêm sản phẩm mới</p>\n                </div>\n                <div className='categoryItem' onClick={() => navigate('/add-new-category', {\n                    state: cookie.isAdmin\n                })} >\n                    <img src='./new-category.png' alt=\"category item\" />\n                    <hr style={{ margin: '0 1rem' }} />\n                    <p>Tạo danh mục mới</p>\n                </div>\n                <div className='categoryItem' onClick={() => navigate('/order-manage', {\n                    state: cookie.isAdmin\n                })}>\n                    <img src='./pending-order.png' alt=\"category item\" />\n                    <hr style={{ margin: '0 1rem' }} />\n                    <p>Quản lý đơn hàng</p>\n                </div>\n            </div>\n            <hr style={{ margin: '0 1em' }} />\n            <div id='controlPanel'>\n                <Outlet />\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/addNewProduct/addNewProduct.js",["184","185","186"],[],"import { useContext, useEffect, useState } from \"react\"\nimport { MessageContext } from \"../../../AppContainer\"\nimport { showPopup, selectTypeOfPopup } from \"../../popup/popup\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport default function AddNewProduct() {\n    const navigate = useNavigate()\n    const [message, setMessage] = useContext(MessageContext)\n    const [thumnail, setThumnail] = useState('')\n    const [categories, setCategories] = useState([])\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [unitPrice, setUnitPrice] = useState(1000)\n    const [category, setCategory] = useState('')\n    const [quantity, setQuantity] = useState(1)\n    const [additionalInfo, setAdditionalInfo] = useState('')\n\n    useEffect(() => {\n        fetch('/api/getCategories')\n        .then(res => res.json())\n        .then(categories => setCategories(categories))\n      }, [])\n\n    function handleChange(event) {\n        let target = event.target.name\n        let value = event.target.value\n        switch (target) {\n            case 'name':\n                setName(value)\n                break\n            case 'category':\n                setCategory(value)\n                break\n            case 'description':\n                setDescription(value)\n                break\n            case 'unit-price':\n                setUnitPrice(value)\n                break\n            case 'quantity':\n                setQuantity(value)\n                break\n            case 'additionalInfoInput':\n                setAdditionalInfo(value)\n                break\n        }\n    }\n\n    async function handleUpload(event) {\n        let image = event.target.files[0]\n        let reader = new FileReader()\n        reader.readAsDataURL(image)\n        reader.onloadend = () => {\n            setThumnail(reader.result)\n        }\n    }\n\n    function handleAddNewProduct() {\n        if (name === '' || category === '' || description === '' || unitPrice === '' || quantity === '' || thumnail === '') {\n            setMessage('Bạn vui lòng điền đầy đủ thông tin bắt buộc')\n            showPopup()\n        }\n        else if (unitPrice < 0) {\n            setMessage('Giá tiền phải lớn hơn hoặc bằng 0 đồng')\n            showPopup()\n        }\n        else if (quantity < 1) {\n            setMessage('Số lượng phải lớn hơn hoặc bằng 1')\n            showPopup()\n        }\n        else {\n            fetch('/api/products/createProduct', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ name, category, description, unitPrice, quantity, thumnail, additionalInfo })\n            }).then(res => res.json())\n            .then(product => {\n                setMessage('Thêm sản phẩm thành công')\n                selectTypeOfPopup('SUCCESS')\n                showPopup()\n                setTimeout(() => {\n                    navigate('/')\n                }, 700)\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    return (\n        <div id=\"addNewProduct\">\n            <div id='compulsoryInfo'>\n                <div className='inputProductInfo' style={{ marginTop: '0'}}>\n                    <label >Tên sản phẩm:</label>\n                    <br />\n                    <input type='text' autoFocus name='name' value={name} onChange={handleChange} placeholder='Nhập tên sản phẩm' />\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Danh mục sản phẩm:</label>\n                    <br />\n                    <select name=\"category\" required onChange={ handleChange } value={category} style={{ padding: '0 0.5em' }}>\n                        <option style={{ fontStyle: 'italic' }} >--Chọn danh mục--</option>\n                        {categories.map((category) => (\n                            <option key={category._id} value={category._id}>{ category.name }</option>\n                        ))}\n                    </select>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Mô tả:</label>\n                    <br />\n                    <input type='text' name='description' value={description} onChange={handleChange} placeholder='Nhập ngắn gọn mô tả về sản phẩm' />\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Đơn giá:</label>\n                    <br />\n                    <input type='number' min={1000} name='unit-price' value={unitPrice} step={1000} onChange={handleChange} placeholder='Nhập đơn giá (giá trị bắt buộc là chữ số và lớn hơn 1.000)'/>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Tổng số lượng:</label>\n                    <br />\n                    <input type='number' min={1} name='quantity' value={quantity} step={1} onChange={handleChange} placeholder='Nhập tổng số lượng sản phẩm trong kho (giá trị là chữ số và bắt buộc lớn hơn 1)'/>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Tải lên ảnh thumnail:</label>\n                    <br />\n                    <input type='file' accept=\"image/*\" name='thumnail' onChange={ handleUpload } />\n                </div>\n            </div>\n            <div id='optionalInfo'>\n                <label >Thông tin chi tiết:</label>\n                    <br />\n                <textarea id=\"additionalInfoInput\" name=\"additionalInfoInput\" placeholder=\"Thông tin chi tiết của sản phẩm (không bắt buộc)\" onChange={ handleChange }/>\n                <div id=\"previewThumnail\">\n                    <h3 style={{ textDecoration: 'underline' }}>Preview ảnh</h3>\n                    <img style={{ marginTop: '1em' }} src={thumnail} />\n                </div>\n            </div>\n            <h3 id='submitAddProduct' onClick={ handleAddNewProduct }>Tạo</h3>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/login/signupForm/signupForm.js",["187","188"],[],"import { useContext, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport { MessageContext } from '../../../AppContainer'\nimport { showPopup, selectTypeOfPopup } from '../../popup/popup'\n\nexport default function SignupForm() {\n    const navigate = useNavigate()\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [reEnterPassword, setReEnterPassword] = useState(\"\")\n    const [message, setMessage] = useContext(MessageContext)\n\n    //handle signup\n    function handleSignup(event) {\n        event.preventDefault()\n        if (!username.includes('@') && !username.includes('0')) {\n            selectTypeOfPopup('WARNING')\n            setMessage('Vui lòng nhập email hoặc số điện thoại hợp lệ!')\n            showPopup()\n        }\n        else if (!username.includes('@') && username.length !== 10) {\n            selectTypeOfPopup('WARNING')\n            setMessage('Vui lòng nhập số điện thoại hợp lệ!')\n            showPopup()\n        }\n        else if (password.length < 6) {\n            selectTypeOfPopup('WARNING')\n            setMessage('Mật khẩu phải có ít nhất 6 ký tự!')\n            showPopup()\n        }\n        else {\n            if (event.target.id === 'register') {\n                if (password === reEnterPassword) {\n                    fetch('/api/auth/signup', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Accept': 'application/json'\n                        },\n                        body: JSON.stringify({username, password, reEnterPassword: reEnterPassword})\n                        })\n                        .then(res => {\n                            if (res.status === 409) {\n                                selectTypeOfPopup('WARNING')\n                                setMessage('Tài khoản đã tồn tại trong hệ thống')\n                                showPopup()\n                                return\n                            }\n                            else if (res.status === 500) {\n                                selectTypeOfPopup('WARNING')\n                                setMessage('Có lỗi xảy ra ở hệ thống, vui lòng thử lại')\n                                showPopup()\n                                return\n                            }\n                            else {\n                                let user = res.json()\n                                fetch('/api/auth/login', {\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                        'Accept': 'application/json'\n                                    },\n                                    body: JSON.stringify({username, password})\n                                })\n                                .then((response) => {\n                                    if (response.status === 200) {\n                                        navigate('/update-user-info', {\n                                            state: username\n                                        })\n                                    }\n                                })\n                                .catch((err) => {\n                                    console.log(err)\n                                })\n                            }\n                        })\n                }\n                else {\n                    setMessage('Xác nhận mật khẩu không trùng khớp!')\n                    showPopup()\n                }\n            }\n        }\n    }\n    //handle change event of a username and password\n    function handleChange(event) {\n        let tartget = event.target.name\n        if(tartget === \"username\") {\n            setUsername(event.target.value)\n        }\n        else if(tartget === 'password'){    \n            setPassword(event.target.value)\n        }\n        else {\n            setReEnterPassword(event.target.value)\n        }\n    }\n\n    function handleBackButton() {\n        navigate('/login')\n    }\n\n    function handleOnKeyDown(event) {\n        if (event.key === 'Enter')\n            handleSignup(event)\n    }\n\n    return (\n            <form id='signupForm' className='form'>\n                <input type='text' name='username' onChange={handleChange} onKeyDown={ handleOnKeyDown } placeholder='Email hoặc số điện thoại' value={ username }/>\n                <input type='password' name='password' onChange={handleChange} onKeyDown={ handleOnKeyDown } placeholder='Mật khẩu' value={ password }/>\n                <input id='re-enterPassword' type='password' name='password1' onChange={handleChange} onKeyDown={ handleOnKeyDown } placeholder='Nhập lại mật khẩu'/>\n                <p id='register' disabled={  !(username !== \"\" && password !== \"\" && reEnterPassword !== \"\") } onClick={ handleSignup }>Tạo tài khoản mới</p>\n                <p id='forgotPassword'>Quên mật khẩu?</p>\n                <img id='back2Login' onClick={ handleBackButton } src='back.png' alt='back'/>\n            </form>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/updateUserInfo/updateUserInfo.js",["189","190","191","192","193"],[],"import { useContext, useEffect, useState } from \"react\"\nimport { useLoaderData, useNavigate, useLocation } from \"react-router-dom\"\nimport { showPopup, selectTypeOfPopup } from \"../popup/popup\"\nimport { useCookies } from \"react-cookie\"\nimport { MessageContext } from \"../../AppContainer\"\nimport './updateUserInfo.css'\n\nexport default function UpdateUserInfo() {\n    const username = useLocation().state\n    const [cookie, setCookie, removeCookie] = useCookies()\n    const navigate = useNavigate()\n    const [message, setMessage] = useContext(MessageContext)\n    const provinces = useLoaderData().results\n    const [province, setProvince] = useState('')\n    const [districts, setDistricts] = useState([])\n    const [district, setDistrict] = useState('')\n    const [wards, setWards] = useState([])\n    const [ward, setWard] = useState('')\n    const [street, setStreet] = useState('')\n    const [gender, setGender] = useState('')\n    const [dob, setDob] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n\n    useEffect(() => {\n        let buttonContainerWidth = document.getElementById('buttonContainer').offsetWidth\n        document.getElementById('buttonContainer').style.right =  (100 - ((buttonContainerWidth / document.body.offsetWidth) * 100)) / 2 + '%'\n    }, [])\n\n    function handleChange(event) {\n        switch (event.target.name) {\n            case 'province':\n                setProvince(event.target.value)\n                break\n            case 'district':\n                setDistrict(event.target.value)\n                break\n            case 'ward':\n                setWard(event.target.value)\n                break\n            case 'street':\n                setStreet(event.target.value)\n                break\n            case 'gender':\n                setGender(event.target.value)\n                break\n            case 'dob':\n                let dobArr = (event.target.value).split('-')\n                if (1920 <= parseInt(dobArr[0]) && parseInt(dobArr[0]) < new Date().getFullYear())\n                    setDob(event.target.value)\n                break\n            case 'phone':\n                setPhoneNumber(event.target.value)\n                break\n        }\n    }\n\n    useEffect(() => {\n        setWards([])\n        if (province !== '') {\n            let provinceArr = province.split(',')\n            fetch('https://vapi.vnappmob.com/api/province/district/'.concat(provinceArr[0]))\n            .then(res => res.json())\n            .then(results => setDistricts(results.results))\n            .catch(err => console.log(err))\n        }\n    }, [province])\n\n    useEffect(() => {\n        setWards([])\n        if (district !== '') {\n            let districtArr = district.split(',')\n            fetch('https://vapi.vnappmob.com/api/province/ward/'.concat(districtArr[0]))\n            .then(res => res.json())\n            .then(results => setWards(results.results))\n            .catch(err => console.log(err))\n        }\n    }, [district])\n\n    function saveInfo() {\n        if (province !== '' && district !== '' && ward !== '' && street !== '' && gender !== '' && dob !== '' && phoneNumber !== '') {\n            if (phoneNumber.length === 10) {\n                let prepareAddress = street + ', ' + ward + ', ' + district.split(',')[1] + ', ' + province.split(',')[1]\n                fetch('/api/users/updateUser', {\n                    method: 'PATCH',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ username, address: prepareAddress, gender, dob, phoneNumber })\n                })\n                .then(res => {\n                    if (res.status === 200) {\n                        selectTypeOfPopup('SUCCESS')\n                        setMessage('Cập nhật thành công')\n                        showPopup()\n                        setTimeout(() => {\n                            navigate('/')\n                        }, 700)\n                    }\n                    else {\n                        selectTypeOfPopup('WARNING')\n                        setMessage('Có lỗi xảy ra, bạn vui lòng thử lại')\n                        showPopup()\n                    }\n                    \n                })\n                .catch(error => console.log(error))\n            }\n            else {\n                selectTypeOfPopup('WARNING')\n                setMessage('Số điện thoại không hợp lệ')\n                showPopup()\n            }\n        }\n        else {\n            selectTypeOfPopup('WARNING')\n            setMessage('Vui lòng nhập đầy đủ thông tin bên dưới')\n            showPopup()\n        }\n    }\n\n    return (\n        <div id=\"updateUserInfo\">\n            <div id='addressInfo'>\n                <h3 style={{ textDecoration: 'underline' }}>Địa chỉ</h3>\n                <div className='inputProductInfo'>\n                    <label >Tỉnh / Thành phố:</label>\n                    <br />\n                    <select name=\"province\" required value={ province } onChange={ handleChange } style={{ padding: '0 0.5em' }}>\n                        <option style={{ fontStyle: 'italic' }} value={ '' }>--Chọn tỉnh / thành phố--</option>\n                        { provinces.map(province => (\n                            <option key={province.province_id} value={[province.province_id, province.province_name]} >{ (province.province_name).replace(/Tỉnh|Thành phố/g, '') }</option>\n                        )) }\n                    </select>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Quận / Huyện / Thị xã:</label>\n                    <br />\n                    <select name=\"district\" required value={ district } onChange={ handleChange } style={{ padding: '0 0.5em' }}>\n                        <option style={{ fontStyle: 'italic' }} value={ '' } >--Chọn quận / huyện / thị xã--</option>\n                        {districts.length !== 0 ? districts.map(district => (\n                            <option key={district.district_id} value={[district.district_id, district.district_name]}>{ (district.district_name).replace(/Huyện|Quận|Thị xã|Thành phố/g, '') }</option>\n                        )) : <></> }\n                    </select>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Xã / Thị trấn:</label>\n                    <br />\n                    <select name=\"ward\" required value={ ward } onChange={ handleChange } style={{ padding: '0 0.5em' }}>\n                        <option style={{ fontStyle: 'italic' }} value={ '' } >--Chọn xã / thị trấn--</option>\n                        {wards.length !== 0 ? wards.map(ward => (\n                            <option key={ward.ward_id}  value={ ward.ward_name }>{ (ward.ward_name).replace(/Xã/g, '') }</option>\n                        )) : <></> }\n                    </select>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Địa chỉ nhà (tên đường, số nhà,...):</label>\n                    <br />\n                    <input type=\"text\" name=\"street\" value={ street } onChange={ handleChange } placeholder=\"Nhập địa chỉ nhà\"/>\n                </div>\n            </div>\n            <hr style={{ margin: 'auto 1em', height: '75%' }} />\n            <div id='bio'>\n                <h3 style={{ textDecoration: 'underline' }}>Thông tin cá nhân</h3>\n                <div className='inputProductInfo'>\n                    <label >Ngày sinh (theo định dạng 'tháng/ngày/năm'):</label>\n                    <br />\n                    <input type=\"date\" name=\"dob\" onChange={ handleChange }/>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Giới tính:</label>\n                    <br />\n                    <select name=\"gender\" required style={{ padding: '0 0.5em' }} onChange={ handleChange }>\n                        <option style={{ fontStyle: 'italic' }} value={ '' } >--Chọn giới tính--</option>\n                        <option value={'male'}>Nam</option>\n                        <option value={'female'}>Nữ</option>\n                        <option value={'other'}>Khác</option>\n                    </select>\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Số điện thoại giao hàng:</label>\n                    <br />\n                    <input style={{ width: '80%' }} type=\"phone\" name=\"phone\" value={ phoneNumber } onChange={ handleChange } placeholder=\"Nhập số điện thoại (10 chữ số)\"/>\n                </div>\n            </div>\n            <div id=\"buttonContainer\">\n                <h3 id='submitSaveInfo' onClick={ saveInfo }>Lưu thông tin</h3>\n                <h3 id='skip' onClick={ () => navigate('/') }>Bổ sung sau</h3>\n            </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/checkoutPage/checkoutPage.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/onlyForwarded/onlyForwarded.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/orderManage/orderManage.js",[],[],"/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/orderManage/order/order.js",["194","195"],[],"import { useEffect, useState } from \"react\"\n\nexport default function Order({ order }) {\n    const [status, setStatus] = useState('')\n    const [orderColor, setOrderColor] = useState('')\n    useEffect(() => {\n        switch (order.status) {\n            case 'unconfirmed':\n                setStatus('Đang chờ xác nhận')\n                setOrderColor('repeating-linear-gradient(180deg,#FFA500,#FFA500 1em,transparent 0,transparent 2em, #FFA500,#FFA500 1em)')\n                break\n            case 'confirmed':\n                setStatus('Đang chờ vận chuyển')\n                setOrderColor('repeating-linear-gradient(180deg,#08acec,#08acec 1em,transparent 0,transparent 2em, #08acec,#08acec 1em)')\n                break\n            case 'onroad':\n                setStatus('Đang vận chuyển')\n                break\n            case 'discarded':\n                setStatus('Đã hủy')\n                setOrderColor('repeating-linear-gradient(180deg,#ff0000,#ff0000 1em,transparent 0,transparent 2em, #ff0000,#ff0000 1em)')\n                break\n            case 'deliveried':\n                setStatus('Giao thành công')\n                setOrderColor('repeating-linear-gradient(180deg,#00C851,#00C851 1em,transparent 0,transparent 2em, #00C851,#00C851 1em)')\n                break\n        }\n    }, [])\n\n    function handleConfirmOrder() {\n        \n    }\n\n    return (\n        <div className=\"order\">\n            <div style={{ width: '20%', position: 'relative' }}>\n                <div className=\"seperateLineOrder\" style={{ backgroundImage: orderColor }} ></div>\n            </div>\n                <div className=\"orderInfo\">\n                    <div className=\"orderInfoItem\">\n                        <label style={{ textDecoration: 'underline', fontWeight: 'bold' }}>ID:</label>\n                        <p>{ order._id }</p>\n                    </div>\n                    <div className=\"orderInfoItem\">\n                        <label style={{ textDecoration: 'underline', fontWeight: 'bold' }}>Trạng thái:</label>\n                        <p>{ status }</p>\n                    </div>\n                    <div className=\"orderInfoItem\">\n                        <label style={{ textDecoration: 'underline', fontWeight: 'bold' }}>Được tạo vào:</label>\n                        <p>{ new Date(order.createAt).toLocaleString() }</p>\n                    </div>\n                    <div className=\"orderInfoItem\">\n                        <label style={{ textDecoration: 'underline', fontWeight: 'bold' }}>Được tạo bởi user:</label>\n                        <p>{ order.user }</p>\n                    </div>\n                    <div className=\"orderInfoItem\">\n                        <label style={{ textDecoration: 'underline', fontWeight: 'bold' }}>Giá trị đơn hàng:</label>\n                        <p style={{ color: '#FF9B9B', fontWeight: 'bold' }}>{new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(order.value)}</p>\n                    </div>\n                    <div className=\"orderQuickAction\">\n                        <div style={{ width: 'fit-content', margin: 'auto' }}>\n                            <button onClick={ handleConfirmOrder }>Xác nhận</button>\n                            <button >Chi tiết</button>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    )\n}","/home/shinbe69/Desktop/React/stationery-shop/src/components/dashboard/addNewCategory/addNewCategory.js",["196","197","198"],[],"import { useContext, useEffect, useState } from \"react\"\nimport { MessageContext } from \"../../../AppContainer\"\nimport { showPopup, selectTypeOfPopup } from \"../../popup/popup\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport default function AddNewCategory() {\n    const navigate = useNavigate()\n    const [message, setMessage] = useContext(MessageContext)\n    const [name, setName] = useState('')\n    const [thumnail, setThumnail] = useState('')\n    \n\n    // useEffect(() => {\n    //     fetch('/api/getCategories')\n    //     .then(res => res.json())\n    //     .then(categories => setCategories(categories))\n    //   }, [])\n\n    async function handleUpload(event) {\n        let image = event.target.files[0]\n        let reader = new FileReader()\n        reader.readAsDataURL(image)\n        reader.onloadend = () => {\n            setThumnail(reader.result)\n        }\n    }\n\n    function handleAddNewCategory() {\n        if (name === '' || thumnail === '') {\n            setMessage('Bạn vui lòng điền đầy đủ thông tin bắt buộc')\n            showPopup()\n        }\n        else {\n            fetch('/api/createCategory', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ name,  thumnail})\n            })\n            .then(res => {\n                if (res.ok) {\n                    selectTypeOfPopup('SUCCESS')\n                    setMessage('Thêm danh mục thành công')\n                    showPopup()\n                    setTimeout(() => {\n                        navigate('/')\n                    }, 700)\n                }\n                else if (res.status === 409) {\n                    selectTypeOfPopup('WARNING')\n                    setMessage('Tên danh mục đã tồn tại')\n                    showPopup()\n                }\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    function handleOnChangeName(event) {\n        setName(event.target.value)\n    }\n\n    return (\n        <div id=\"addNewProduct\">\n            <div id='compulsoryInfo'>\n                <div className='inputProductInfo' style={{ marginTop: '0'}}>\n                    <label >Tên danh mục:</label>\n                    <br />\n                    <input type='text' autoFocus name='name' value={name} onChange={ handleOnChangeName } placeholder='Nhập tên danh mục' />\n                </div>\n                <div className='inputProductInfo'>\n                    <label >Tải lên icon:</label>\n                    <br />\n                    <input type='file' accept=\"image/*\" name='thumnail' onChange={ handleUpload } />\n                </div>\n            </div>\n            <div id='optionalInfo'>\n                <div id=\"previewThumnail\">\n                    <h3 style={{ textDecoration: 'underline' }}>Preview icon</h3>\n                    <img style={{ marginTop: '1em' }} src={thumnail} />\n                </div>\n            </div>\n            <h3 id='submitAddProduct' onClick={ handleAddNewCategory }>Tạo</h3>\n        </div>\n    )\n}",{"ruleId":"199","severity":1,"message":"200","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":17},{"ruleId":"199","severity":1,"message":"203","line":11,"column":20,"nodeType":"201","messageId":"202","endLine":11,"endColumn":29},{"ruleId":"199","severity":1,"message":"204","line":16,"column":12,"nodeType":"201","messageId":"202","endLine":16,"endColumn":19},{"ruleId":"199","severity":1,"message":"205","line":18,"column":11,"nodeType":"201","messageId":"202","endLine":18,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":43,"column":8,"nodeType":"208","endLine":43,"endColumn":21,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":47,"column":8,"nodeType":"208","endLine":47,"endColumn":14,"suggestions":"211"},{"ruleId":"199","severity":1,"message":"203","line":9,"column":18,"nodeType":"201","messageId":"202","endLine":9,"endColumn":27},{"ruleId":"199","severity":1,"message":"212","line":9,"column":29,"nodeType":"201","messageId":"202","endLine":9,"endColumn":41},{"ruleId":"206","severity":1,"message":"213","line":51,"column":6,"nodeType":"208","endLine":51,"endColumn":17,"suggestions":"214"},{"ruleId":"199","severity":1,"message":"203","line":11,"column":20,"nodeType":"201","messageId":"202","endLine":11,"endColumn":29},{"ruleId":"199","severity":1,"message":"212","line":11,"column":31,"nodeType":"201","messageId":"202","endLine":11,"endColumn":43},{"ruleId":"199","severity":1,"message":"215","line":13,"column":12,"nodeType":"201","messageId":"202","endLine":13,"endColumn":24},{"ruleId":"199","severity":1,"message":"216","line":14,"column":12,"nodeType":"201","messageId":"202","endLine":14,"endColumn":16},{"ruleId":"199","severity":1,"message":"204","line":15,"column":12,"nodeType":"201","messageId":"202","endLine":15,"endColumn":19},{"ruleId":"199","severity":1,"message":"205","line":8,"column":11,"nodeType":"201","messageId":"202","endLine":8,"endColumn":19},{"ruleId":"199","severity":1,"message":"217","line":10,"column":12,"nodeType":"201","messageId":"202","endLine":10,"endColumn":18},{"ruleId":"199","severity":1,"message":"203","line":10,"column":20,"nodeType":"201","messageId":"202","endLine":10,"endColumn":29},{"ruleId":"199","severity":1,"message":"212","line":10,"column":31,"nodeType":"201","messageId":"202","endLine":10,"endColumn":43},{"ruleId":"199","severity":1,"message":"204","line":13,"column":12,"nodeType":"201","messageId":"202","endLine":13,"endColumn":19},{"ruleId":"199","severity":1,"message":"218","line":12,"column":14,"nodeType":"201","messageId":"202","endLine":12,"endColumn":23},{"ruleId":"199","severity":1,"message":"204","line":11,"column":12,"nodeType":"201","messageId":"202","endLine":11,"endColumn":19},{"ruleId":"199","severity":1,"message":"203","line":12,"column":20,"nodeType":"201","messageId":"202","endLine":12,"endColumn":29},{"ruleId":"199","severity":1,"message":"212","line":12,"column":31,"nodeType":"201","messageId":"202","endLine":12,"endColumn":43},{"ruleId":"206","severity":1,"message":"219","line":36,"column":8,"nodeType":"208","endLine":36,"endColumn":10,"suggestions":"220"},{"ruleId":"199","severity":1,"message":"221","line":1,"column":22,"nodeType":"201","messageId":"202","endLine":1,"endColumn":31},{"ruleId":"199","severity":1,"message":"203","line":10,"column":20,"nodeType":"201","messageId":"202","endLine":10,"endColumn":29},{"ruleId":"199","severity":1,"message":"216","line":11,"column":12,"nodeType":"201","messageId":"202","endLine":11,"endColumn":16},{"ruleId":"199","severity":1,"message":"204","line":12,"column":12,"nodeType":"201","messageId":"202","endLine":12,"endColumn":19},{"ruleId":"199","severity":1,"message":"215","line":13,"column":12,"nodeType":"201","messageId":"202","endLine":13,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":18,"column":9,"nodeType":"224","messageId":"225","endLine":31,"endColumn":10},{"ruleId":"199","severity":1,"message":"221","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":19},{"ruleId":"199","severity":1,"message":"203","line":7,"column":20,"nodeType":"201","messageId":"202","endLine":7,"endColumn":29},{"ruleId":"199","severity":1,"message":"212","line":7,"column":31,"nodeType":"201","messageId":"202","endLine":7,"endColumn":43},{"ruleId":"199","severity":1,"message":"204","line":8,"column":12,"nodeType":"201","messageId":"202","endLine":8,"endColumn":19},{"ruleId":"222","severity":1,"message":"223","line":27,"column":9,"nodeType":"224","messageId":"225","endLine":46,"endColumn":10},{"ruleId":"226","severity":1,"message":"227","line":137,"column":21,"nodeType":"228","endLine":137,"endColumn":72},{"ruleId":"199","severity":1,"message":"204","line":11,"column":12,"nodeType":"201","messageId":"202","endLine":11,"endColumn":19},{"ruleId":"199","severity":1,"message":"229","line":56,"column":37,"nodeType":"201","messageId":"202","endLine":56,"endColumn":41},{"ruleId":"199","severity":1,"message":"217","line":10,"column":12,"nodeType":"201","messageId":"202","endLine":10,"endColumn":18},{"ruleId":"199","severity":1,"message":"203","line":10,"column":20,"nodeType":"201","messageId":"202","endLine":10,"endColumn":29},{"ruleId":"199","severity":1,"message":"212","line":10,"column":31,"nodeType":"201","messageId":"202","endLine":10,"endColumn":43},{"ruleId":"199","severity":1,"message":"204","line":12,"column":12,"nodeType":"201","messageId":"202","endLine":12,"endColumn":19},{"ruleId":"222","severity":1,"message":"223","line":30,"column":9,"nodeType":"224","messageId":"225","endLine":54,"endColumn":10},{"ruleId":"222","severity":1,"message":"223","line":7,"column":9,"nodeType":"224","messageId":"225","endLine":27,"endColumn":10},{"ruleId":"206","severity":1,"message":"230","line":28,"column":8,"nodeType":"208","endLine":28,"endColumn":10,"suggestions":"231"},{"ruleId":"199","severity":1,"message":"221","line":1,"column":22,"nodeType":"201","messageId":"202","endLine":1,"endColumn":31},{"ruleId":"199","severity":1,"message":"204","line":8,"column":12,"nodeType":"201","messageId":"202","endLine":8,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":82,"column":21,"nodeType":"228","endLine":82,"endColumn":72},"no-unused-vars","'Protected' is defined but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","'message' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCart'. Either include it or remove the dependency array.","ArrayExpression",["232"],"React Hook useEffect has a missing dependency: 'setCartQuantity'. Either include it or remove the dependency array.",["233"],"'removeCookie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["234"],"'cartQuantity' is assigned a value but never used.","'cart' is assigned a value but never used.","'cookie' is assigned a value but never used.","'addToCart' is defined but never used.","React Hook useEffect has a missing dependency: 'cookie.user'. Either include it or remove the dependency array.",["235"],"'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order.status'. Either include it or remove the dependency array.",["236"],{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [cookie.user, setCart]",{"range":"247","text":"248"},"Update the dependencies array to be: [cart, setCartQuantity]",{"range":"249","text":"250"},"Update the dependencies array to be: [navigate, selection]",{"range":"251","text":"252"},"Update the dependencies array to be: [cookie.user]",{"range":"253","text":"254"},"Update the dependencies array to be: [order.status]",{"range":"255","text":"256"},[1687,1700],"[cookie.user, setCart]",[1781,1787],"[cart, setCartQuantity]",[1643,1654],"[navigate, selection]",[1346,1348],"[cookie.user]",[1291,1293],"[order.status]"]